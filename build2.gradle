plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
//    id 'java'
    id 'java-library'
    id 'eclipse'
    //id 'war'
    // id 'maven'
    id 'maven-publish'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

java {
    withJavadocJar()
    withSourcesJar()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud.stream.app:analytics-app-dependencies:2.1.2.RELEASE"
        //     mavenBom "org.springframework.cloud.stream.app:counter-sink-rabbit:2.1.2.RELEASE"
        mavenBom "org.springframework.cloud.stream.app:app-starters-core-dependencies:2.1.2.RELEASE"
        // mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR3"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    implementation 'org.springframework.boot:spring-boot-starter'
    compile('org.springframework.boot:spring-boot-starter-web')
//    compile('org.springframework.cloud:spring-cloud-stream-binder-rabbit')
    compile('org.springframework.cloud:spring-cloud-starter-stream-kafka')

    compile('io.micrometer:micrometer-registry-prometheus')
    compile('io.micrometer.prometheus:prometheus-rsocket-spring')
    compile('org.springframework.cloud.stream.app:app-starters-micrometer-common')
    compile('org.springframework.cloud.stream.app:app-starters-security-common')

    compile('org.springframework.boot:spring-boot-configuration-processor')
    compile('org.springframework.cloud.stream.app:spring-cloud-starter-stream-sink-counter')
    // compile('org.springframework.cloud.stream.app:counter-sink-rabbit:2.1.2.RELEASE')
//    compileOnly("org.projectlombok:lombok")
//    annotationProcessor("org.projectlombok:lombok")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    //  implementation("io.micrometer:micrometer-registry-prometheus:1.3.3")
    //  implementation('io.micrometer:micrometer-core:1.3.3')
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                afterEvaluate {
                    name = project.description
                    description = project.description
                }
            }
            versionMapping {
                usage('java-api') {
                    fromResolutionResult()
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
//
//        mavenJava(MavenPublication) {
//            suppressAllPomMetadataWarnings()
//            from components.java
//        }
    }
}
//install {
//    repositories.mavenInstaller {
//        customizePom(pom, project)
//    }
//}
//
//def customizePom(pom, gradleProject) {
//    pom.whenConfigured { generatedPom ->
//
//        // sort to make pom dependencies order consistent to ease comparison of older poms
//        generatedPom.dependencies = generatedPom.dependencies.sort { dep ->
//            "$dep.scope:$dep.groupId:$dep.artifactId"
//        }
//
//        def managedVersions = dependencyManagement.managedVersions
//        generatedPom.dependencies.findAll{dep -> !dep.version }.each { dep ->
//            dep.version = managedVersions["${dep.groupId}:${dep.artifactId}"]
//        }
//
//        // eliminate test-scoped dependencies (no need in maven central poms)
//        generatedPom.dependencies.removeAll { dep ->
//            dep.scope == 'test'
//        }
//
//        // add all items necessary for maven central publication
//        generatedPom.project {
//            name = gradleProject.description
//            description = gradleProject.description
//        }
//    }
//}
